% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encrypt.R
\name{encrypt}
\alias{encrypt}
\title{Save an encrypted RDS}
\usage{
encrypt(
  robj,
  dst = NULL,
  key = getOption("MONOCYPHER_KEY", default = NULL),
  additional_data = NULL,
  compress = c("none", "gzip", "bzip2", "xz")
)
}
\arguments{
\item{robj}{R object}

\item{dst}{Either a filename or NULL. Default: NULL write results to a raw vector}

\item{key}{The encryption key. This may be a character string, a 32-byte raw vector
or a 64-character hex string (which encodes 32 bytes). When a shorter character string 
is given, a 32-byte key is derived using the Argon2 key derivation
function.  
If a key is not explicitly set by the user 
when calling the function, an attempt is made to fetch \code{'MONOCYPHER_KEY'} from
the session global options.}

\item{additional_data}{Additional data to include in the
authentication.  Raw vector or character string. Default: NULL.  
This additional data is \emph{not}
included with the encrypted data, but represents an essential
component of the message authentication. The same \code{additional_data} 
must be presented during both encryption and decryption for the message
to be authenticated.  See vignette on 'Additional Data'.}

\item{compress}{compression type. Default: 'none'.  Possible values:
'none', 'gzip', 'bzip2', 'xz'}
}
\value{
Raw vector containing encrypted object written to file or returned
}
\description{
Save an encrypted RDS
}
\examples{
key <- argon2('my key')
encrypt(mtcars, key = key) |> 
  decrypt(key = key)
}
