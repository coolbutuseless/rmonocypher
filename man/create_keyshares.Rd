% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sss.R
\name{create_keyshares}
\alias{create_keyshares}
\alias{combine_keyshares}
\title{Create keyshares for sharing a secret with a group using Shamir's Secret
Sharing algorithm}
\usage{
create_keyshares(key, n, k, type = "string")

combine_keyshares(shares, type = "string")
}
\arguments{
\item{key}{The encryption key. Can be a character string, a 32-byte raw vector
or a 64-character hex string (encoding 32 bytes). When a shorter character string 
is given, a 32-byte key is derived using the Argon2 algorithm and 
a default, fixed code (note: this is insecure).  
If this argument is not explicitly set by the user 
when calling the function, an attempt is made to fetch \code{'MONOCYPHER_KEY'} from
the session global options. 
It is recommended that a key be created external to this function call.}

\item{n}{total number of shares to create}

\item{k}{number of shares needed to recreate key. Must be less than or 
equal to \code{n}}

\item{type}{return type. 'string' or 'raw'. Default: 'string' returns the 
shares or key as hexadecimal character string. Otherwise returns
a raw vector}

\item{shares}{list of keyshares. Each keyshare can either be a 33-byte
raw vector or 66-character hexadecimal string (the shares are 1-byte
larger than the key)}
}
\value{
\code{create_keyshares()} takes a key and returns a list of keyshares.
        \code{combine_keyshares()} takes a list of keyshares and returns
        the origina key
}
\description{
Create keyshares for sharing a secret with a group using Shamir's Secret
Sharing algorithm

Recreate the original key using \code{k} of \code{n} keyshares
}
\examples{
orig_key <- "337ca9406391140208844c76b536c111f44531adef8d5cebcc68f83ab43cc745"
shares <- create_keyshares(orig_key, n = 6, k = 3)
length(shares)
combine_keyshares(shares[1:3])
}
